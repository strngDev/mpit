import logging
import sys

from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery

import config
import asyncio

import fsm_dont_know
import fsm_know
import keyboards
import not_stated

# bot init
bot = Bot(token=config.BOT_API)
dp = Dispatcher()
dp.include_router(fsm_know.router)
dp.include_router(fsm_dont_know.router)
dp.include_router(not_stated.router)




@dp.message(CommandStart())
async def start_handler(msg: Message):
    await msg.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {msg.from_user.full_name}!", reply_markup=keyboards.main_reply_keyboard())


@dp.message(F.text == "üì® –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É üì®")
async def personal_data_agreement(msg: Message):
    await msg.answer("–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                     reply_markup=keyboards.personal_data_agreement_keyboard()
                     )


@dp.callback_query(F.data == "personal_data_agreement")
async def submit_application_handler(callback: CallbackQuery):
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    await bot.send_message(callback.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –∏–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –≤ it",
                     reply_markup=keyboards.know_or_dont_keyboard())


@dp.message(F.text == "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚ùì")
async def faq_handler(msg: Message):
    await msg.answer(open("faq.txt", "r").read())


@dp.message(F.text == "üóìÔ∏è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üóìÔ∏è")
async def events_handler(msg: Message):
    await msg.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ–∑–∂–µ!")


async def main():
    await dp.start_polling(bot)


logging.basicConfig(level=logging.NOTSET, stream=sys.stdout)
asyncio.run(main())